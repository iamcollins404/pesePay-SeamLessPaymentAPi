"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PesePayClient = void 0;
const axios_1 = __importDefault(require("axios"));
const security_handler_1 = require("./lib/security-handler"); // Import from your security file
class PesePayClient {
    constructor(apiKey, encryptionKey) {
        this.http = axios_1.default.create({
            baseURL: 'https://api.pesepay.com/api/payments-engine/',
            headers: {
                'authorization': apiKey,
                'content-type': 'application/json'
            }
        });
        this.security = new security_handler_1.PesePaySecurity(encryptionKey);
    }
    initiateTransaction(request) {
        return __awaiter(this, void 0, void 0, function* () {
            const encryptedPayload = this.security.encryptData(request);
            const response = yield this.http.post('v1/payments/initiate', { payload: encryptedPayload });
            return this.security.decryptData(response.data.payload);
        });
    }
    makeSeamlessPayment(request) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!request.customer.email) {
                request.customer.email = ""; // their api allows an empty string here
            }
            if (!request.customer.name) {
                request.customer.name = "GUEST";
            }
            request.resultUrl = "https://pesepay.com/"; //not needed for seamless payment so defaulting it to their website
            const payload = this.security.encryptData(request);
            const response = yield this.http.post('v2/payments/make-payment', { payload });
            const decryptedResponse = this.security.decryptData(response.data.payload);
            return decryptedResponse;
        });
    }
    checkPaymentStatus(referenceNumber) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.http.get(`v1/payments/check-payment?referenceNumber=${referenceNumber}`);
            return this.security.decryptData(response.data.payload);
        });
    }
    getActiveCurrencies() {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.http.get('v1/currencies/active');
            return response.data;
        });
    }
    getPaymentMethodsByCurrency(currencyCode) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.http.get(`v1/payment-methods/for-currency?currencyCode=${currencyCode}`);
            return response.data;
        });
    }
}
exports.PesePayClient = PesePayClient;
